/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */img,legend{border:0}legend,td,th{padding:0}.table,table{border-collapse:collapse}.table td,sub,sup{position:relative}.plagin__container .form select,form .input{transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-spacing:0}.table{width:100%;margin-bottom:50px}.table .lecture__ended{background-color:#ddd}.btn,form .input{font-size:14px;line-height:150%;background-color:#fff;box-sizing:border-box}.table td,.table th{padding:7px;border:1px solid #000}form .input{display:block;width:100%;padding:4px 12px;color:#555;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}form .input:focus{border-color:#66afe9;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.filter__form{margin:30px 0}.btn{display:inline-block;padding:10px 12px;margin-bottom:0;margin-left:10px;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:1px solid #ccc;border-radius:4px}.btn:hover{color:#333;background-color:#e6e6e6;border-color:#adadad;text-decoration:none}.popup__cnt{top:0;left:0;right:0;bottom:0;width:100%;height:100%;z-index:1000;position:fixed;outline:0!important;background:rgba(0,0,0,.8);display:none}.popup__cnt .popup__cnt--window{position:relative;min-width:100px;min-height:100px;margin-top:50px}.popup__cnt.active{display:block}.lector__popup{width:300px;min-height:300px;margin:0 auto;background-color:#fff;position:relative;padding:10px;text-align:center;font-size:16px}.lector__popup .p_close{position:absolute;top:-28px;right:-31px;width:25px;height:25px;color:#fff;font-size:22px;border:3px solid #fff;border-radius:50%;text-decoration:none;margin:0;padding:0;text-align:center;line-height:22px}.lector__popup .lector__popup-img,.lector__popup .lector__popup-name{text-align:center;margin-bottom:15px}.lector__popup .lector__popup-name{font-size:20px;font-weight:700}.lector__popup .lector__popup-img img{max-width:150px;max-height:150px}.lector__popup .lector__popup-text{text-align:left}body{font-size:12px;min-width:320px}.container{width:100%;max-width:1170px;margin:0 auto 100px;padding:0 10px;box-sizing:border-box}h1{font-size:30px;padding:15px;text-align:center;font-weight:700}.filter_wrap{border-top:1px solid #ccc;border-bottom:1px solid #ccc;margin-bottom:15px;background-color:#f1f1f1;padding:5px;box-sizing:border-box}a{color:#000}a:hover{color:#00A}.plagin__container{margin-bottom:25px;border:1px solid #ccc;border-radius:5px}.plagin__container .form select{display:inline-block;padding:6px 12px;font-size:14px;line-height:170%;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.plagin__container .form select:focus{border-color:#66afe9;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.plagin__container .form .date,.plagin__container .form .date__rows{margin:15px 0}.plagin__container .form .date__rows-title{font-weight:700;font-size:16px;display:inline-block;width:85px}.plagin__container .form .btn{min-width:100px;margin-left:0}.plagin__container .plagin__body{display:none;margin:15px 0;padding-left:5px;padding-right:5px}.plagin__container .plagin__body .align{margin-bottom:10px;width:400px}.plagin__container .plagin__body .align input,.plagin__container .plagin__body .align select{width:100%}.plagin__container .plagin__body.active{display:block}.plagin__container .plagin__title{cursor:pointer;background-color:#f1f1f1;padding:4px 5px;border-radius:5px}.plagin__container .date__submit{text-align:right}.plagin__container input[type=radio]{margin:5px}.plagin__container .radio{font-size:14px;margin-bottom:25px}.plagin__container .plagin__body-iname{font-size:13px;padding-bottom:5px}.plagin__container .plagin__body-tab-cont{display:none}.plagin__container .plagin__body-tab-cont.active{display:block}.plagin__container .plagin_result{font-size:14px;line-height:150%}.plagin__container .plagin_result .plagin_result-success{background-color:#dff0d8;text-align:center}.plagin__container .plagin_result .plagin_result-error{background-color:#f2dede}.plagin__container .plagin_result .plagin_result-error,.plagin__container .plagin_result .plagin_result-success{padding:25px 10px;display:none}.plagin__container .plagin_result .plagin_result-error.active,.plagin__container .plagin_result .plagin_result-success.active{display:block}@media screen and (max-width:1000px){thead{display:none}.table td{display:block;padding-left:40%;border:none;min-height:14px}.table td:nth-child(odd){background-color:#ccc}.table td:before{content:attr(data-label);position:absolute;left:3%}.table tr{border-bottom:3px dotted #111}}@media screen and (max-width:420px){.lector__popup{margin-left:15px;width:220px}}@media screen and (max-width:600px){.table td:before{position:static;display:block;background-color:#ccc;font-weight:700;padding:10px}.table td{padding:0;text-align:center}.table td span{padding:10px;display:inline-block}.table td:nth-child(odd){background-color:#fff}.table .lecture__ended td:nth-child(odd){background-color:#ddd}.plagin__container .form select{display:block;width:100%}.plagin__container .form .date__rows-title{display:block;margin:10px 0}.plagin__container .form .btn{width:100%}.plagin__container .plagin__body .align{width:auto}.plagin__container .plagin__body .align input,.plagin__container .plagin__body .align select{width:100%}}@media (min-width:768px){form .filter__input,form .input{display:inline-block;vertical-align:middle}form .input{width:auto;margin:0}form .filter__input{margin-bottom:0}form .filter__input:nth-child(even){margin:0 15px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
